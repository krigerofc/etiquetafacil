// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  USER 
  ADMIN
  MODERATOR
  SUPORT
}

model Plan {
  id        Int    @id @default(autoincrement())
  name      String @unique
  price     Float
  maxLabels Int    // limite de etiquetas
  maxProducts Int? // se quiser limitar produtos tamb√©m
  features  String? // json/string com recursos extras
  users     User[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  cnpj      String   @unique
  phone     String?   @unique
  addres    String?
  city      String?
  state     String?
  zipCode   String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  planId    Int?
  plan      Plan?    @relation(fields: [planId], references: [id])
  products  Products[] 
  labels    Labels[]   
  logs      Logs[]  
}

model Products {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  name        String
  description String
  responsible String
  brand       String
  default_Days Int
  temperature Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  labels      Labels[]
}

model Labels {
  id                Int      @id @default(autoincrement())
  userId            Int
  user              User     @relation(fields: [userId], references: [id])
  productId         Int
  product           Products @relation(fields: [productId], references: [id])
  amount           Int
  manufacture_Date  DateTime @default(now())
  experation_Date   DateTime
  status            String
  createdAt         DateTime @default(now())
}

model Logs {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  action    String
  details   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}